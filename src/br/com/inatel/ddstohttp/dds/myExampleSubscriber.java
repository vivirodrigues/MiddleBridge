package br.com.inatel.ddstohttp.dds;

import java.io.IOException;

/* myExampleSubscriber.java

A publication of data of type myExample

This file is derived from code automatically generated by the rtiddsgen 
command:

rtiddsgen -language java -example <arch> .idl

Example publication of type myExample automatically generated by 
'rtiddsgen' To test them follow these steps:

(1) Compile this file and the example subscription.

(2) Start the subscription on the same domain used for RTI Data Distribution
Service with the command
java myExampleSubscriber <domain_id> <sample_count>

(3) Start the publication on the same domain used for RTI Data Distribution
Service with the command
java myExamplePublisher <domain_id> <sample_count>

(4) [Optional] Specify the list of discovery initial peers and 
multicast receive addresses via an environment variable or a file 
(in the current working directory) called NDDS_DISCOVERY_PEERS. 

You can run any number of publishers and subscribers programs, and can 
add and remove them dynamically from the domain.

Example:

To run the example application on domain <domain_id>:

Ensure that $(NDDSHOME)/lib/<arch> is on the dynamic library path for
Java.                       

On UNIX systems: 
add $(NDDSHOME)/lib/<arch> to the 'LD_LIBRARY_PATH' environment
variable

On Windows systems:
add %NDDSHOME%\lib\<arch> to the 'Path' environment variable

Run the Java applications:

java -Djava.ext.dirs=$NDDSHOME/class myExamplePublisher <domain_id>

java -Djava.ext.dirs=$NDDSHOME/class myExampleSubscriber <domain_id>  
*/

import java.net.InetAddress;
import java.net.UnknownHostException;
import java.util.Arrays;
import java.util.List;

import javax.swing.JOptionPane;

import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.methods.HttpPost;

import com.rti.dds.domain.*;
import com.rti.dds.infrastructure.*;
import com.rti.dds.subscription.*;
import com.rti.dds.topic.*;
import com.rti.dds.type.builtin.StringDataReader;
import com.rti.dds.type.builtin.StringTypeSupport;
import com.rti.ndds.config.*;

import br.com.inatel.configuration.Message;
import br.com.inatel.http.DataHTTP;
import br.com.inatel.http.Headers;
import br.com.inatel.http.HttpConnection;

// ===========================================================================

public class myExampleSubscriber extends DataReaderAdapter {
	// For clean shutdown sequence
	private static boolean shutdown_flag = false;
	private int domain;
	private String topic1;
	private boolean validacao;
	private static List<Headers> listV;
	public static Message message1 = new Message();
	public static DataHTTP dataHttp1 = new DataHTTP();
	public static HttpConnection httpConnection1 = new HttpConnection();
	public static HttpPost httppost1;
	public static DataDDS dataDDS1 = new DataDDS();
	public static String message2;	

	public void connection(DataDDS dataDDS, DataHTTP dataHttp, Message message, List<Headers> listV,
		HttpPost httppost) throws ClientProtocolException, IOException {
		message2 = "oioioi";
		this.domain = dataDDS.getDomain();
		this.topic1 = dataDDS.getTopic();
		this.validacao = message.isValidation();
		message1 = message;
		dataHttp1 = dataHttp;
		listV = listV;
		httppost1 = httppost;
		dataDDS1 = dataDDS;
		System.out.println(this.dataDDS1.getTopic()+ " Topic 1");
		subscriber();
	}
		
	public void subscriber() {			
		System.out.println(this.dataDDS1.getTopic()+ " Topic 2");
		// Create the DDS Domain participant on domain ID 0
		DomainParticipant participant = DomainParticipantFactory.get_instance().create_participant(
				domain, // Domain ID																											// = 0
				DomainParticipantFactory.PARTICIPANT_QOS_DEFAULT, // QoS
				null, // listener
				StatusKind.STATUS_MASK_NONE); // mask
		if (participant == null) {
			System.err.println("Unable to create domain participant");
			return;
		}

		// Create the topic "Hello World" for the String type
		Topic topic = participant.create_topic(topic1, // Topic Name
				StringTypeSupport.get_type_name(), // Topic Data Type
				DomainParticipant.TOPIC_QOS_DEFAULT, // QoS
				null, // listener
				StatusKind.STATUS_MASK_NONE); // mask
		if (topic == null) {
			System.err.println("Unable to create topic.");
			return;
		}
		// Create the data reader using the default publisher
		StringDataReader dataReader = (StringDataReader) participant.create_datareader(topic, // Topic
				Subscriber.DATAREADER_QOS_DEFAULT, // QoS
				new myExampleSubscriber(), // Listener
				StatusKind.DATA_AVAILABLE_STATUS); // mask

		if (dataReader == null) {
			System.err.println("Unable to create DDS Data Reader");
			return;
		}

		// Reading User-Input
		System.out.println("Ready to read data.");
		// System.out.println("Press CTRL+C to terminate.");

		for (;;) {
			try {
				Thread.sleep(2000);
				if (shutdown_flag)
					break;
			} catch (InterruptedException e) {
				// Nothing to do...
			}
		}

		System.out.println("Shutting down...");
		System.out.println(this.dataDDS1.getTopic()+ " Topic 2.1");

		// Deleting entities and DomainParticipant
		participant.delete_contained_entities();
		DomainParticipantFactory.get_instance().delete_participant(participant);
		
		
	}
	
	
	@Override
	public void on_data_available(DataReader reader) {

		// Method Parameter of Type DataReader must be cast to Data Type ofDataReader
		// for this Topic
		StringDataReader stringReader = (StringDataReader) reader;
		SampleInfo info = new SampleInfo();

		for (;;) {
			try {
				String sample = stringReader.take_next_sample(info);

				if (info.valid_data) {										
					System.out.println(this.dataDDS1.getTopic()+" Topic valida");
					valida(sample);
					

					if (sample.equals("")) {
						shutdown_flag = true;
					}
				}
			} catch (RETCODE_NO_DATA noData) {
				// No more data to read
				break;
			} catch (RETCODE_ERROR e) {
				// An error occurred
				e.printStackTrace();
			} catch (ClientProtocolException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
	}
	
	//criar um metodo para retornar os objetos aqui 
	public String valida(String messageArrived) throws ClientProtocolException, IOException{
		if (this.validacao == true) {
			String[] msgArrived = messageArrived.split(",");
			int tamMsg = msgArrived.length;
			if (!(tamMsg == (this.message1.getMessageSize()))) {
				System.out.println("The number of variables received does not fit the model");
				//JOptionPane.showMessageDialog(null, "");
				return null;
			}
		}			
		httpConnection1.dataHttp(messageArrived, message1, dataHttp1, listV, httppost1);
		
		return null;
	}
}
